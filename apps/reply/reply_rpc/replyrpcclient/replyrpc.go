// Code generated by goctl. DO NOT EDIT.
// Source: reply_rpc.proto

package replyrpcclient

import (
	"context"

	"github.com/zhanghongliang12/lebron/apps/reply/reply_rpc/reply_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = reply_rpc.Request
	Response = reply_rpc.Response

	ReplyRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultReplyRpc struct {
		cli zrpc.Client
	}
)

func NewReplyRpc(cli zrpc.Client) ReplyRpc {
	return &defaultReplyRpc{
		cli: cli,
	}
}

func (m *defaultReplyRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := reply_rpc.NewReplyRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
