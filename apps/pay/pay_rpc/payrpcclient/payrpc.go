// Code generated by goctl. DO NOT EDIT.
// Source: pay_rpc.proto

package payrpcclient

import (
	"context"

	"github.com/zhanghongliang12/lebron/apps/pay/pay_rpc/pay_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = pay_rpc.Request
	Response = pay_rpc.Response

	PayRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultPayRpc struct {
		cli zrpc.Client
	}
)

func NewPayRpc(cli zrpc.Client) PayRpc {
	return &defaultPayRpc{
		cli: cli,
	}
}

func (m *defaultPayRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := pay_rpc.NewPayRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
