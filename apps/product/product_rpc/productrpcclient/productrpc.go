// Code generated by goctl. DO NOT EDIT.
// Source: product_rpc.proto

package productrpcclient

import (
	"context"

	"github.com/zhanghongliang12/lebron/apps/product/product_rpc/product_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = product_rpc.Request
	Response = product_rpc.Response

	ProductRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultProductRpc struct {
		cli zrpc.Client
	}
)

func NewProductRpc(cli zrpc.Client) ProductRpc {
	return &defaultProductRpc{
		cli: cli,
	}
}

func (m *defaultProductRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := product_rpc.NewProductRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
