// Code generated by goctl. DO NOT EDIT.
// Source: recommend_rpc.proto

package recommendrpcclient

import (
	"context"

	"github.com/zhanghongliang12/lebron/apps/recommend/recommend_rpc/recommend_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = recommend_rpc.Request
	Response = recommend_rpc.Response

	RecommendRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRecommendRpc struct {
		cli zrpc.Client
	}
)

func NewRecommendRpc(cli zrpc.Client) RecommendRpc {
	return &defaultRecommendRpc{
		cli: cli,
	}
}

func (m *defaultRecommendRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := recommend_rpc.NewRecommendRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
